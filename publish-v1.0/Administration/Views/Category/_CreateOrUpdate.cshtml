@model CategoryModel

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<input type="text" name="currentoption" id="currentoption" value="@ViewBag.CurrentOption" style="display:none" />
<div class="panel-group" id="accordion">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" class="commonalink" data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
                    基本信息
                </a>
            </h4>
        </div>
        <div id="collapseOne" class="panel-collapse collapse ">
            <div class="panel-body">
                @TabInfo()
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" class="commonalink" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo">
                    搜索引擎优化
                </a>
            </h4>
        </div>
        <div id="collapseTwo" class="panel-collapse collapse ">
            <div class="panel-body">
                @TabSeo()
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" class="commonalink" data-toggle="collapse" data-parent="#accordion" href="#collapseThree">
                    商品
                </a>
            </h4>
        </div>
        <div id="collapseThree" class="panel-collapse collapse ">
            <div class="panel-body">
                @TabProducts()
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" class="commonalink" data-toggle="collapse" data-parent="#accordion" href="#collapseFour">
                    折扣
                </a>
            </h4>
        </div>
        <div id="collapseFour" class="panel-collapse collapse ">
            <div class="panel-body">
                @TabDiscounts()
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" class="commonalink" data-toggle="collapse" data-parent="#accordion" href="#collapseFive">
                    访问控制
                </a>
            </h4>
        </div>
        <div id="collapseFive" class="panel-collapse collapse ">
            <div class="panel-body">
                @TabAcl()
            </div>
        </div>
    </div>
    <div class="panel panel-default" style="display:none">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" class="commonalink" data-toggle="collapse" data-parent="#accordion" href="#collapseSix">
                    商场
                </a>
            </h4>
        </div>
        <div id="collapseSix" class="panel-collapse collapse ">
            <div class="panel-body">
                @TabStores()
            </div>
        </div>
    </div>

</div>


<script>
    $(document).ready(function() {
        $($("#currentoption").val()).attr("class","panel-collapse collapse in");
        $('.commonalink').bind('click', function () {
            $("#currentoption").val($(this).attr('href'));
        });
        var oreignval= $("#PriceRanges").val();
        $("#PriceRanges").bind("focus",function(){
            $("#PriceRanges").val()=oreignval;
        });
    });
</script>

@helper TabInfo()
{

    <script type="text/javascript">
        $(document).ready(function () {
            $("#@Html.FieldIdFor(model => model.AllowCustomersToSelectPageSize)").click(togglePageSize);
            togglePageSize();
        });

        function togglePageSize() {
            if ($('#@Html.FieldIdFor(model => model.AllowCustomersToSelectPageSize)').is(':checked')) {
                $('#pnlPageSize').hide();
                $('#pnlPageSizeOptions').show();
            } else {
                $('#pnlPageSize').show();
                $('#pnlPageSizeOptions').hide();
            }
        }
    </script>


    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Name):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </td>
        </tr>
        <!--zheng-->
        <tr style="display:none">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Description):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.Description, "UEditor")
                @Html.ValidationMessageFor(model => model.Description)
            </td>
        </tr>
    </table>

    <table class="adminContent">
        <!--zheng-->
        <tr style="display:none">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CategoryTemplateId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.CategoryTemplateId, Model.AvailableCategoryTemplates)
                @Html.ValidationMessageFor(model => model.CategoryTemplateId)
            </td>
        </tr>
        <!--zheng-->
        <tr style="display:none">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PictureId)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.PictureId)
                @Html.ValidationMessageFor(model => model.PictureId)
            </td>
        </tr>
        <!--zheng-->
        <tr style="display:none">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ParentCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.ParentCategoryId, Model.AvailableCategories)
                @Html.ValidationMessageFor(model => model.ParentCategoryId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PriceRanges):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.PriceRanges)
                @Html.ValidationMessageFor(model => model.PriceRanges)
            </td>
        </tr>
        <!--zheng-->
        <tr style="display:none">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ShowOnHomePage):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.ShowOnHomePage)
                @Html.ValidationMessageFor(model => model.ShowOnHomePage)
            </td>
        </tr>
        <!--zheng-->
        <tr style="display:none">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.IncludeInTopMenu):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.IncludeInTopMenu)
                @Html.ValidationMessageFor(model => model.IncludeInTopMenu)
            </td>
        </tr>
        <!--zheng-->
        <tr style="display:none">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AllowCustomersToSelectPageSize):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.AllowCustomersToSelectPageSize)
                @Html.ValidationMessageFor(model => model.AllowCustomersToSelectPageSize)
            </td>
        </tr>
        <tr id="pnlPageSize">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PageSize):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.PageSize)
                @Html.ValidationMessageFor(model => model.PageSize)
            </td>
        </tr>
        <tr id="pnlPageSizeOptions">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PageSizeOptions):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.PageSizeOptions)
                @Html.ValidationMessageFor(model => model.PageSizeOptions)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Published):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.Published)
                @Html.ValidationMessageFor(model => model.Published)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.DisplayOrder):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.DisplayOrder)
                @Html.ValidationMessageFor(model => model.DisplayOrder)
            </td>
        </tr>
    </table>
}
@helper TabSeo()
{

    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.MetaKeywords):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.MetaKeywords)
                @Html.ValidationMessageFor(model => model.MetaKeywords)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.MetaDescription):
            </td>
            <td class="adminData">
                @Html.TextAreaFor(x => x.MetaDescription)
                @Html.ValidationMessageFor(model => model.MetaDescription)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.MetaTitle):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.MetaTitle)
                @Html.ValidationMessageFor(model => model.MetaTitle)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SeName):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.SeName)
                @Html.ValidationMessageFor(model => model.SeName)
            </td>
        </tr>
    </table>
}
@helper TabProducts()
{
    if (Model.Id > 0)
    {
        var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
        <table class="adminContent">
            <tr>
                <td>

                    <div id="products-grid"></div>

                    <script>
                        $(document).ready(function () {
                            $("#products-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("ProductList", "Category", new { categoryId = Model.Id }))",
                                            type: "POST",
                                            dataType: "json"
                                        },
                                        update: {
                                            url:"@Html.Raw(Url.Action("ProductUpdate", "Category"))",
                                            type: "POST",
                                            dataType: "json"
                                        },
                                        destroy: {
                                            url: "@Html.Raw(Url.Action("ProductDelete", "Category"))",
                                            type: "POST",
                                            dataType: "json"
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors",
                                        model: {
                                            id: "Id",
                                            fields: {
                                                ProductName: {editable: false, type: "string" },
                                                IsFeaturedProduct: {editable: true, type: "boolean" },
                                                DisplayOrder1: {editable: true, type: "number" },
                                                ProductId: {editable: false, type: "number" }
                                            }
                                        }
                                    },
                                    requestEnd: function(e) {
                                        if(e.type=="update") {
                                            this.read();
                                        }
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(gridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true
                                },
                                editable: {
                                    confirmation: false,
                                    mode: "inline"
                                },
                                scrollable: false,
                                columns: [{
                                    field: "ProductName",
                                    title: "@T("Admin.Catalog.Categories.Products.Fields.Product")"
                                }, {
                                    field: "IsFeaturedProduct",
                                    title: "@T("Admin.Catalog.Categories.Products.Fields.IsFeaturedProduct")",
                                    width: 150,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: '<img src="@Url.Content("~/Administration/Content/images/")active-#=IsFeaturedProduct#.gif" />'
                                }, {
                                    field: "DisplayOrder1",
                                    title: "@T("Admin.Catalog.Categories.Products.Fields.DisplayOrder")",
                                    //integer format
                                    format: "{0:0}",
                                    width: 150
                                }, {
                                    field: "ProductId",
                                    title: "@T("Admin.Common.View")",
                                    width: 100,
                                    template: '<a href="@Url.Content("~/Admin/Product/Edit/")#=ProductId#">@T("Admin.Common.View")</a>'
                                }, {
                                    command: [{
                                        name: "edit",
                                        text: "@T("Admin.Common.Edit")"
                                    }, {
                                        name: "destroy",
                                        text: "@T("Admin.Common.Delete")"
                                    }],
                                    width: 200
                                }]
                            });
                        });
                    </script>
                </td>
            </tr>
            <tr>
                <td width="100%">
                    <input type="submit" id="btnAddNewProduct" name="btnAddNewProduct" value="@T("Admin.Catalog.Categories.Products.AddNew")" onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "Category", new { categoryId = Model.Id, btnId = "btnRefreshProducts", formId = "category-form" }))', 800, 800, true); return false;" class="btn btn-sm btn-primary btn-flat " />
                    <input type="submit" id="btnRefreshProducts" name="btnRefreshProducts" style="display: none" />
                    <script type="text/javascript">
                        $(document).ready(function () {
                            $('#btnRefreshProducts').click(function () {
                                //refresh grid
                                var optionsGrid = $("#products-grid").data('kendoGrid');
                                optionsGrid.dataSource.read();

                                //return false to don't reload a page
                                return false;
                            });
                        });
                    </script>
                </td>
            </tr>
        </table>
    }
    else
    {
        @T("Admin.Catalog.Categories.Products.SaveBeforeEdit")
    }
}

@helper TabDiscounts()
{
    if (Model.AvailableDiscounts != null && Model.AvailableDiscounts.Count > 0)
    {
        foreach (var discount in Model.AvailableDiscounts)
        {
            <input type="checkbox" name="SelectedDiscountIds" value="@discount.Id"
                   @if (Model.SelectedDiscountIds != null && Model.SelectedDiscountIds.Contains(discount.Id)) { <text> checked="checked" </text>   } />@discount.Name
                <br />
        }
    }
    else
    {
        @T("Admin.Catalog.Categories.Discounts.NoDiscounts")
    }
}
@helper TabAcl()
{

    <script type="text/javascript">
        $(document).ready(function () {

            $("#@Html.FieldIdFor(model => model.SubjectToAcl)").click(toggleAcl);

            toggleAcl();
        });


        function toggleAcl() {
            if ($('#@Html.FieldIdFor(model => model.SubjectToAcl)').is(':checked')) {
                $('#pnl-acl').show();
            }
            else {
                $('#pnl-acl').hide();
            }
        }

    </script>
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SubjectToAcl):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SubjectToAcl)
                @Html.ValidationMessageFor(model => model.SubjectToAcl)
            </td>
        </tr>
        <tr id="pnl-acl">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AvailableCustomerRoles):
            </td>
            <td class="adminData">
                @if (Model.AvailableCustomerRoles != null && Model.AvailableCustomerRoles.Count > 0)
                {
                    foreach (var customerRole in Model.AvailableCustomerRoles)
                    {
                        <div>
                            <input type="checkbox" name="SelectedCustomerRoleIds" value="@customerRole.Id" checked="@(Model.SelectedCustomerRoleIds != null && Model.SelectedCustomerRoleIds.Contains(customerRole.Id))" />@customerRole.Name
                        </div>
                    }
                }
                else
                {
                    <div>No customer roles defined</div>
                }
            </td>
        </tr>
    </table>
}

@helper TabStores()
{
    <script type="text/javascript">
        $(document).ready(function () {

            $("#@Html.FieldIdFor(model => model.LimitedToStores)").click(toggleStoreMapping);

            toggleStoreMapping();
        });


        function toggleStoreMapping() {
            if ($('#@Html.FieldIdFor(model => model.LimitedToStores)').is(':checked')) {
                $('#pnl-available-stores').show();
            }
            else {
                $('#pnl-available-stores').hide();
            }
        }

    </script>
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.LimitedToStores):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.LimitedToStores)
                @Html.ValidationMessageFor(model => model.LimitedToStores)
            </td>
        </tr>
        <tr id="pnl-available-stores">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AvailableStores):
            </td>
            <td class="adminData">
                @if (Model.AvailableStores != null && Model.AvailableStores.Count > 0)
                {
                    foreach (var store in Model.AvailableStores)
                    {
                        <div>
                            <input type="checkbox" name="SelectedStoreIds" value="@store.Id" checked="@(Model.SelectedStoreIds != null && Model.SelectedStoreIds.Contains(store.Id))" />@store.Name
                        </div>
                    }
                }
                else
                {
                    <div>No stores defined</div>
                }
            </td>
        </tr>
    </table>
}
