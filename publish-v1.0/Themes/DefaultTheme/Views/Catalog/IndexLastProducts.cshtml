@using Nop.Web.Models.Catalog
@model ProductSModel
    @{
        Layout = "~/Views/Shared/_ColumnsOne.cshtml";
        Html.AddTitleParts("每日新品——瑞翠华光官网");
   
    }
@helper  ChangWeek(int num)
    {
         string week = "";
        switch (num)
        {
            case 1:
                week = "一";
                break;
            case 2:
                week = "二";
                break;
            case 3:
                week = "三";
                break;
            case 4:
                week = "四";
                break;
            case 5:
                week = "五";
                break;
            case 6:
                week = "六";
                break;
            case 7:
                week = "日";
                break;
        }
         <text>@week</text>
    }
@foreach(var datetime in Model.dateList)
{ 
    <div class="product-date">
        <h4 class="product-time">
            <i class="iconfont font18">&#xe60b;</i>
            @datetime &nbsp; &nbsp; 星期 @ChangWeek(((((int)(Convert.ToDateTime(datetime).DayOfWeek)) + 6) % 7 + 1)) 
        </h4>
    </div>
    <div class="xm-goods-list-wrap">
        <ul class="xm-goods-list clearfix">
        @foreach (var product in Model.Products.Where(o=>o.CreatedOnUtc>=Convert.ToDateTime(datetime) && o.CreatedOnUtc<Convert.ToDateTime(datetime).AddDays(1)))
        {
            <li class="item-box product-width" style="width: 254px;">
                <div class="xm-goods-item product-width" data-productid="64">
                    <div class="item-thumb">
                        <a title="@product.Name " target="_blank" href="@Url.RouteUrl("Product", new { SeName = product.SeName })">
                            <img srcset="@product.DefaultPictureModel.ImageUrl" title="@product.DefaultPictureModel.Title" src="@product.DefaultPictureModel.ImageUrl" alt="@product.DefaultPictureModel.AlternateText ">
                        </a>
                    </div>
                    <div class="item-info">
                        <h3 class="item-title">
                            <a href="@Url.RouteUrl("Product", new { SeName = product.SeName })" target="_blank">@product.Name </a>
                        </h3>
                        <div class="item-price">
                            <del class="price old-price">@product.ProductPrice.OldPrice</del>
                            <span class="price actual-price">@product.ProductPrice.Price</span>
                        </div>
                        <div class="item-star">
                            <a title="@(product.Score)分">
                                <span class="icon-stat @Html.ScoreToStar(product.Score) "></span>
                            </a>
                            <span class="item-comments" style="display:none;">0 人评价</span>
                        </div>
                        @{
            //prepare "Add to cart" AJAX link
            string addtocartlink = "", addtowishlink = "";
            var shoppingCartTypeId = (int)Nop.Core.Domain.Orders.ShoppingCartType.ShoppingCart;
            var shoppingWishTypeId = (int)Nop.Core.Domain.Orders.ShoppingCartType.Wishlist;
            var quantity = 1;
            if (product.ProductPrice.ForceRedirectionAfterAddingToCart)
            {
                addtowishlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = product.Id, shoppingCartTypeId = shoppingWishTypeId, quantity = quantity, forceredirection = product.ProductPrice.ForceRedirectionAfterAddingToCart });
                addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = product.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = product.ProductPrice.ForceRedirectionAfterAddingToCart });
            }
            else
            {
                addtowishlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = product.Id, shoppingCartTypeId = shoppingWishTypeId, quantity = quantity, });
                addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = product.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, });
            } 
                        }
                        <div class="item-actions">
                            @if (!product.ProductPrice.DisableBuyButton)
                            {
                                <a class="btn btn-small btn-primary J_addCart" href="javascript: void(0);" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;"><i class="iconfont font12 wcolor">&#xf0148;</i>购物车</a>
                                <a class="btn btn-dake btn-small J_addFav" href="javascript: void(0);" data-productid="@product.Id"
                                   onclick="AjaxCart.addproducttocart_catalog('@addtowishlink');return false;"><i class="iconfont font12 wcolor">&#xf0145;</i>收藏</a>
                            }
                        </div>
                        <div class="item-flag"> </div>
                    </div>
                </div>
            </li>
        }
        </ul>
    </div>
}
    <div class="xm-pagenavi">
        @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
    </div>
