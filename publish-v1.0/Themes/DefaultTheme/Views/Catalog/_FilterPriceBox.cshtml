@model CatalogPagingFilteringModel.PriceRangeFilterModel
@using Nop.Web.Models.Catalog;
@{
    var selectedItem = Model.Items.FirstOrDefault(x => x.Selected);
}
@helper FormatPriceRangeText(CatalogPagingFilteringModel.PriceRangeFilterItem filterItem)
{
    string rangeText = "";
    if (String.IsNullOrWhiteSpace(filterItem.From))
    {
        rangeText = string.Format(T("Filtering.PriceRangeFilter.Under").Text, string.Format("<span class=\"PriceRange\">{0}</span>", filterItem.To));
    }
    else if (String.IsNullOrWhiteSpace(filterItem.To))
    {
        rangeText = string.Format(T("Filtering.PriceRangeFilter.Over").Text, string.Format("<span class=\"PriceRange\">{0}</span>", filterItem.From));
    }
    else
    {
        rangeText = string.Format("<span class=\"PriceRange\">{0}</span> - <span class=\"PriceRange\">{1}</span>", filterItem.From, filterItem.To);
    }
    <text>@Html.Raw(rangeText)</text>
}
@if (Model.Enabled)
{
    if (selectedItem == null)
    {
        <dl class="xm-filter-list  category-filter-list clearfix">
            <dt>价格区间 ：</dt>
            <dd>
                <ul id="typeAdapt" class="clearfix">

                    @foreach (var item in Model.Items)
                    {
                        <li><a href="@item.FilterUrl">@FormatPriceRangeText(item)</a> </li>
                    }

                </ul>
            </dd>
        </dl>
    }
    else
    {
        <dl class="xm-filter-list  category-filter-list clearfix">
            <dt class="condition-title">价格区间：</dt>
            <dd>
                <ul class="clearfix">
                    <li class="condition">
                        @FormatPriceRangeText(selectedItem)
                        <a href="@Model.RemoveFilterUrl"><i class="iconfont">&#xf00b3;</i></a>
                    </li>
                    <li class="condition">
                        <a href="@Model.RemoveFilterUrl">全部移除</a>
                    </li>
                </ul>
            </dd>
        </dl>
    }

}