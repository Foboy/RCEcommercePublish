@model TopicModel
@using Nop.Core.Domain.Seo
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Topics;
@{
    var groupDictionary = new Dictionary<string, string[]>();
    groupDictionary.Add("帮助中心", new[] { "购物指南", "常见问题", "用户协议" });
    groupDictionary.Add("售后服务", new[] { "正品承诺", "售后咨询", "退货政策" });
    groupDictionary.Add("配送方式", new[] { "配送说明", "运费说明", "验货签收" });
    groupDictionary.Add("关于瑞翠", new[] { "了解瑞翠", "联系我们", "关注我们" });
    var isPopup = ViewBag.IsPopup;
    KeyValuePair<string, string[]> group = new KeyValuePair<string,string[]>();
    var isGroup = false;
    foreach (var item in groupDictionary)
    {
        if (item.Value.Contains(Model.SystemName))
        {
            isGroup = true;
            group = item;
            break;
        }
    }
    if (isPopup == null || isPopup == false)
    {
        if (isGroup)
        {
            Layout = "~/Views/Shared/_ColumnsTopicGroup.cshtml";
            Html.AppendCssFileParts("~/Themes/DefaultTheme/Content/css/about.css");
        }
        else
        {
            Layout = "~/Views/Shared/_ColumnsThree.cshtml"; 
        }
    }
    else
    {
        /*pop-up windows*/
        Layout = "~/Views/Shared/_RootPopup.cshtml";
    }

    if (!Model.IsPasswordProtected)
    {
        Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Title);
        Html.AddMetaDescriptionParts(Model.MetaDescription);
        Html.AddMetaKeywordParts(Model.MetaKeywords);
    }

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var topicUrl = Url.RouteUrl("Topic", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(topicUrl);
    }
}
@if (Model.IsPasswordProtected)
{
    // For popup topics, use a minimal layout that includes the Ajax and jQuery scripts
    if (isPopup != null && isPopup == true)
    {
        Layout = "~/Views/Shared/_RootPopup.cshtml";
    }
    
    
    
<script type="text/javascript">
    $(function () {
        $('#button-password').click(function () {
            var topicId = $("#@Html.FieldIdFor(model => model.Id)").val();
            var password = $('#password').val();
            $.ajax({
                cache: false,
                type: 'POST',
                url: '@Url.RouteUrl("TopicAuthenticate")',
                data: { "id": topicId, "password": password },
                dataType: 'json',
                success: function (data) {
                    if (data.Authenticated) {
                        $('#ph-title .page-title h1').html(data.Title);
                        if ($('#ph-title .page-title h1').text().length == 0) {
                            $('#ph-title').hide();
                        }
                        $('#ph-topic .page-body').html(data.Body);
                        $('#ph-password').hide();
                        $('#ph-topic').show();
                    }
                    else {
                        $('#password-error').text(data.Error);
                        $('#ph-password #password').select().focus();
                    }
                }
            });
            return false;
        });
    });

    $(document).ready(function () {
        $('#ph-topic').hide();
        $('#ph-password #password').select().focus();
    });
</script>
    <div class="topic-password" id="ph-password">
        @using (Html.BeginRouteForm("TopicAuthenticate"))
        {
            @Html.HiddenFor(model => model.Id)
            <div class="enter-password-title">
                @T("Topic.EnterPassword")
            </div>
            <div class="enter-password-form">
                @Html.Password("password")
                <input type="submit" id="button-password" value="@T("Topic.Button")" class="button-1 topic-password-button" />
            </div>
            <div class="password-error">
                <span id="password-error"></span>
            </div>
        }
    </div>
}

@if (isGroup)
{
    @section left
{
        <div class="rc-about-sidebar rc-about">
            @foreach (var g in groupDictionary)
            {
                <div class="hd"><h3 class="title">@g.Key</h3></div>
                <ul class="about-nav-list">
                    @foreach (var sy in g.Value)
                    {
                        <li class="@(sy.Equals(Model.SystemName)?"current":"")"><a href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName(sy) })">@sy</a></li>
                    }
                </ul>
            }

</div>



    }
}
<div class="about-box rc-about">
    <div class="section">
        <div class="page topic-page" id="ph-topic">
            @if (!isGroup)
            {
                <div id="ph-title">
                    <div class="page-title">
                        <h1>
                            @Model.Title
                        </h1>
                    </div>
                </div>
            }
            <div class="page-body">
                @Html.Raw(Model.Body)
            </div>
        </div>
    </div>
</div>


